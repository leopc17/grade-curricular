function showSyllabus(subject) {
    const syllabusContent = {
        'algoritmos': 'Introdução a Algoritmos. Formas de representação. Metodologia de Desenvolvimento de Algoritmos. Introdução a uma linguagem de programação. Tipos de Dados Básicos e Estruturados. Comandos de uma Linguagem de Programação. Modularidade e Abstração. Estratégias de Depuração. Cadeias e Processamento de Cadeias.',
        'introducao-computacao': 'Histórico. Tecnologias e aplicações de computadores. Conceitos básicos de computação. Representação e processamento da informação. Sistemas de Numeração. Aritmética binária. Álgebra de Boole. Portas Lógicas. Circuitos. Sistemas componentes de um computador: hardware e software. Visão geral das áreas da Ciência da Computação.',
        'ingles-instrumental': 'Introdução à leitura da língua inglesa, através de textos curtos com assuntos variados relacionados à Computação, matemática ou estatística, contendo estrutura e vocabulário básicos, sendo abordados de forma funcional e prática, tendo em vista a compreensão e interpretação. Desenvolvimento e ampliação das estratégias de leitura.',
        'leituraEproducao-texto': 'Leitura como base para a produção textual. Importância social da oralidade e da escrita. Gêneros textuais. Mecanismos linguísticos relacionados à produção textual. Elaboração de textos orais e escritos.',
        'matematica-discreta': 'Conjuntos. Álgebra de conjuntos. Relações. Funções. Técnicas de prova. Indução matemática. Recursão e relações de recorrência. Introdução a lógica matemática.',
        
        'linguagem-progI': 'Arranjos uni-dimensionais, bi-dimensionais e multi-dimensionais. Tipos abstratos de dados: listas, pilhas e filas. Recursão. Documentação. Arquivos.',
        'laboratorio-progI': 'Estudo prático em laboratório do conteúdo abordado na disciplina Linguagem de Programação I.',
        'logica-computacao': 'Histórico. Fundamentos da lógica. Lógica Proposicional. Lógica de Predicados. Prova de Teoremas. Formalização de problemas. Programação lógica. Aplicações de Lógica na Computação',
        'metodologia-cientifica': 'A ciência e o método científico. A ciência e a ciência da computação. Técnicas de Análise de dados empirícos. Técnicas de apresentação gráfica de dados empíricos. Pesquisa Empírica. Design de Experimentos. Validação de investigações empíricas. Medição. Análise de Dados. Leitura, escrita e apresentação de artigos científicos. Planejamento de Estudos de Caso e Surveys.',
        'calculoI': 'O conjunto dos números reais. Funções reais de uma variável real. Limite e continuidade; Funções elementares. Derivadas e suas aplicações.',
        'teoria-grafos': 'Grafos orientados e não-orientados. Caminhos. Planaridade. Conectividade. Coloração. Grafos Infinitos. Algoritmos em grafos. Problemas intratáveis. Busca em Largura e Profundidade. Algoritmos do Menor Caminho. Árvore Geradora. Ordenação Topológica',
        
        'linguagem-progII': 'Conceitos fundamentais da programação orientada a objetos: classes, objetos, construtores e métodos, encapsulamento. Herança e polimorfismo. Notação UML para classes. Modelagem de aplicações com classes abstratas e interfaces. Tratamento de erros e exceções. Estruturas de dados genéricas com Coleções, Listas, Mapas e Iteradores. Testes de unidade. Documentação. Arquivos.',
        'laboratorio-progII': 'Estudo prático em laboratório do conteúdo abordado na disciplina Linguagem de Programação II.',
        'tcs': 'Ciência e tecnologia como processos sociais. Impactos sociais dos avanços científicos e tecnológicos. Ciência, Tecnologia e Desenvolvimento. Ciência, Tecnologia e Mercado. Aspectos multidimensionais dos processos decisórios e das relações de poder entre os protagonistas da Ciência e da Tecnologia. Questões éticas implicadas na pesquisa científica e no desenvolvimento tecnológico.',
        'algebraVetorial-geometriaAnalitica': 'Vetores. Retas e Planos. Cônicas e Quádricas. Espaços Euclidianos. Matrizes e Sistemas de Equações Lineares. Funções Lineares.',
        'calculoII': 'A integral. Técnicas de integração. Aplicações da integral. Extensões do conceito de integral. Sequências e Séries numéricas.',
        'fisica-computacao': 'Força e Campo Elétrico. Potencial elétrico. Corrente e circuitos. Magnetismo. Indutância. Ondas eletromagnéticas. Aplicações.',
        
        'arquitetura-computadores': 'Introdução à Organização de Computadores. Classificação de arquiteturas. Linguagens de Montagem. Modos de Endereçamento, Conjunto de Instruções. Mecanismos de Interrupção e de Exceção. Sistema de memória hierárquica. Subsistema de Entrada e Saída. Arquiteturas RISC e CISC. Pipeline. Multiprocessadores. Multicomputadores. Introdução a Arquiteturas Paralelas e não Convencionais.',
        'estrutura-dados': 'Abstração de dados. Estruturas de dados lineares. Árvores e suas Generalizações. Grafos. Tabelas Hash. Ordenação e Busca. Introdução à Complexidade de Algoritmos.',
        'lab-estrutura-dados': 'Estudo prático em laboratório do conteúdo abordado na disciplina Estrutura de Dados.',
        'sistemas-informacao': 'Fundamentos da teoria geral de sistemas. Histórico, gerações e arquiteturas de sistemas de informação computadorizados (SICs). Análise e projeto de sistemas orientados a processos.',
        'algebra-linear': 'Sistemas de Equações Lineares e Matrizes. Espaços Vetoriais. Transformações Lineares. Espaços com Produto Interno. Determinantes. Autovalores e autovetores. Aplicações da Álgebra Linear.',
        'paradigmas-linguagens': 'Fundamentos de Linguagens de Programação. Definição e Caracterização dos Principais Paradigmas de Programação. Prática de Programação com os Principais Paradigmas de Programação.',
        
        'banco-dadosI': 'Introdução a Sistemas de Informação e Bancos de Dados. Sistemas de Gerenciamento de Bancos de Dados. Modelagem de Dados. Bancos de Dados Relacionais. Aplicações e Tópicos na área.',
        'analise-proj-sistemas': 'Ciclo de vida de um sistema de software. Requisitos de Software.Visão geral de análise essencial (estruturada). Análise e projeto Orientado a Objetos. UML: linguagem de modelagem orientada a objetos. Modelos estáticos e dinâmicos em UML. Ferramentas de modelagem. Desenvolvimento de projetos reais em grupo.',
        'linguagens-formais': 'Alfabetos e linguagens. Linguagens Regulares: Autômatos finitos determinísticos e não-determinísticos; expressões regulares; Linguagens Livres de Contexto: Gramáticas Livres de Contexto; autômatos de pilha; Linguagens Sensíveis ao Contexto e Linguagens Recursivamente Enumeráveis: Máquinas de Turing. Tese de Church-Turing. Indecibilidade: Máquinas de Turing Universais.',
        'probabilidade-estatistica': 'Introduzir os conceitos elementares sobre probabilidade e variáveis aleatórias; Trabalhar e aprender as principais distribuições de probabilidade, o cálculo de probabilidades e representações geométricas (por exemplo: Poisson, Binomial, Normal e outras). Aprender a Análise Exploratória de Dados e os métodos de cálculo das principais medidas estatísticas para se aplicar tanto em uma massa de dados como em uma variável aleatória. Introduzir os conceitos elementares sobre Inferência Estatística (por exemplo:população, amostra, parâmetro, estatística, e os demais). Aprender as principaistécnicas de estimação por intervalo, Teste de Hipótese, Análise de Variância e Regressão Linear Simples.',
        'metodos-avancados-prog': 'Técnicas avançadas de análise e projeto de software orientado a objetos empregados no desenvolvimento de software. Padrões de projeto. Técnicas de refatoramento de software. Conceitos sobre frameworks e desenvolvimento orientado a componentes.',
        
        'banco-dadosII': 'Revisão sobre bancos de dados estruturados. Bancos de dados objeto-relacionais. Bancos de dados semi-estruturados: dados semi-estruturados, dados textuais, dados multimídia. Representação de consultas, modelos de recuperação, modos de apresentação de resultados. Compressão de dados em SGBD. Bancos de dados não-relacionais: NoSQL.',
        'engenharia-softwareI': 'Introdução à Engenharia de Software. Processos de desenvolvimento de software. Engenharia de Requisitos. Projeto de arquitetura de software. Reuso. Verificação, validação e testes de software. Gerenciamento de Projetos. Estimativa de custo de software. Qualidade de software. Evolução de software. Desenvolvimento ágil de software.',
        'calculo-numerico': 'Computação numérica. Erros. Soluções numéricas de equações. Sistemas de equações lineares. Interpolação e ajustamento de curvas. Integração numérica. Diferenciação numérica.',
        'redes-computadoresI': 'Introdução aos sistemas de comunicação. Meios de transmissão. Técnicas e dispositivos de transmissão. Modelos de referência OSI/ISO e TCP/IP. Protocolos de Comunicação Camadas TCP/IP: aplicação, transporte, internet e enlace. Introdução aos Sistemas Distribuídos: conceituação, terminologia e principais ideias na área.',
        'laboratorio-engI': 'Introdução à Engenharia de Software. Processos de desenvolvimento de software. Engenharia de Requisitos. Projeto de arquitetura de software. Reuso. Verificação, validação e testes de software. Gerenciamento de Projetos. Estimativa de custo de software. Qualidade de software. Evolução de software. Desenvolvimento ágil de software.',
        'etica-computacao': 'Noções gerais e históricas do significado de ética. Ética e Moral. Etica e vida cotidiana. Desafios da Ética na contemporaneidade. Ética nas organizações. Códigos de Ética. Ética e Cidadania.',
        
        'sistemas-operacionais': 'Conceitos básicos de Sistemas Operacionais. Características e gerência de processos. Controle de concorrência. Gerência de memória. Gerência do processador. Gerência de dispositivos de entrada e saída. Gerência de memória. Gerência de arquivos. Núcleos dos sistemas Operacionais mais utilizados: histórico, vantagens e desvantagens. Aspectos introdutórios de sistemas operacionais distribuídos. Virtualização de sistemas operacionais. Estudos de caso.',
        'gerenciamento-projetos': 'Planejamento estratégico de sistemas de informação e planejamento de sistemas.Modelos organizacionais e de gestão: projetizado, funcional e matricial.Fundamentos de gestão: liderança, negociação e administração de conflitos, análisede viabilidade de projetos, comunicação interpessoal e planejamento estratégico.Pensamento sistêmico com mapeamento de processos de acordo com o PMBoK.Modelos de gestão de projetos. Gerenciamento ágil de projetos. Modelos dematuridade organizacional e certificação profissional em gerenciamento de projetos.',
        'engenharia-softwareII': 'Enfoque prático para os conceitos iniciais explorados na disciplina Engenharia de Software I, abordando os seguintes tópicos: Estimativas de projeto de software (estimando recursos, esforço, tamanho). Precificação de Software. Modelagem de requisitos considerando cenários e classes de análise. Modelagem de requisitos considerando fluxos e comportamento. Modelagem de projeto considerando abstração, arquitetura, modularidade, encapsulamento e independência funcional. Projeto de arquitetura.Padrões de arquitetura e taxonomia simplificada dos estilos de arquitetura.Estratégias de testes de software. Aspectos relacionados a rastreabilidade,confiabilidade, privacidade, e segurança.',
        'redes-computadoresII': 'Tecnologias de redes; Introdução e visão geral de interconexão de redes;Conectando Redes Heterogêneas: conceitos, arquitetura eprotocolos; Equipamentos de interconexão; Interconexão de LANs, MANs e WANs;TCP e UDP: protocolo, controle de congestionamento; Protocolo IP; Protocolo ARP eRARP; Protocolos do Nível de Aplicação: DNS, SMTP, POP3, FTP, HTTP, DHCP;Protocolos de Redes para Aplicações Multimídia; Redes ATM e tecnologias comgarantias de serviço; Camada de adaptação do ATM; Redes virtuais (VLANs eVPNs).',
        'tecnica-analise-algoritmos': 'Medidas de Complexidade, Análise Assintótica de Limites de Complexidade, Técnicas de Prova de Cotas Inferiores. Notação “Big O”, “Omega” e “Theta”. Análise de Algoritmos Iterativos e Recursivos. Técnicas de Algoritmos: força bruta, pesquisa exaustiva, algoritmos gulosos, divisão e conquista, backtracking, programação dinâmica.',
        
        'compiladores': 'Introdução (Processadores de Linguagens, Estrutura de um Compilador); Tradutores de Linguagem; Análise Léxica; Análise Sintática (reconhecedores : analisadores top- down e bottom-up; conjuntos First e Follow; tabelas preditivas e LR); Análise semântica (atributos semânticos herdados e sintetizados; esquemas S e L atribuídos), Geração de código intermediário; Otimização; Recuperação de erros; Uso das ferramentas para geração de reconhecedores.',
        'interface-humano-computador': 'Engenharia da usabilidade e o projeto centrado no usuário. Métodos de concepção de interfaces. Etapas do Método para Concepção de Interfaces. Sistemas de prototipação. Avaliação de interfaces e sistemas.',
        'sistemas-distribuidos': 'Introdução a sistemas distribuídos. Modelos arquiteturais, fundamentais e de comunicação. Sincronização e concorrência. Middlewares. Projeto de sistemas distribuídos: camadas, carga, consistência e estrutura de software. Arquiteturas em sistemas distribuídos: CORBA, CCM, MDA e SOA. Webservices. Interoperabilidade em sistemas distribuídos.',
        'programacao-web': 'Desenvolvimento de sistemas web segundo o padrão MVC (ModelViewController). Frameworks Web. Serviços Web.',
        'IA': 'Linguagens Simbólicas. Programação em Lógica. Resolução de Problemas com Busca: estratégias de Busca, Busca Cega e Busca Heurística. Busca com Maximização de Função. Esquemas para Representação do Conhecimento: Lógicos, em Rede, Estruturados, Procedurais. Sistemas de Produção com Encadeamento para a Frente e Encadeamento para trás. Sistemas Especialistas. Aprendizado de Máquina. Aprendizado Indutivo. Árvores de Decisão. Redes Neurais. Processamento de Linguagem Natural.',
        
        'computacao-grafica': 'Introdução à Computação Gráfica: origem e definição. Elementos para computação gráfica bidimensional. Modelos, estrutura de dados, visualização e técnicas interativas. Aplicações de computação gráfica. Elementos para computação tridimensional. Processamento de Imagens.',
        'TCCI': 'TCC I tem como finalidade a preparação do projeto ou plano de trabalho, com ênfase na leitura orientada da literatura da área para fundamentação teórico metodológica do trabalho.',
        'TCCII': 'O TCC II deverá dar continuidade ao planejamento e execução do plano de trabalho, culminando com a elaboração do texto do trabalho de conclusão.',
    };

    const modal = document.getElementById('syllabusModal');
    const syllabusText = document.getElementById('syllabus-content');
    syllabusText.innerText = syllabusContent[subject];
    modal.style.display = 'block';
}

function hideModal() {
    const modal = document.getElementById('syllabusModal');
    modal.style.display = 'none';
}
